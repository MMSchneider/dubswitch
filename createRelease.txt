Here are the updated instructions for packaging and releasing your Electron app for multiple platforms:

1. Install electron-packager (if not already installed)
npm install --save-dev electron-packager

2. Build for each platform
macOS Intel (x64):
npm run package-mac

macOS Silicon (arm64):
npm run package-mac-arm

Windows (x64):
npm run package-win

Raspberry Pi/Linux ARM:
npm run package-linux-arm

3. Zip it

# macOS Intel (x64)
zip -r dubswitch-mac-x64.zip dist/dubswitch-darwin-x64

# macOS Silicon (arm64)
zip -r dubswitch-mac-arm64.zip dist/dubswitch-darwin-arm64

# Windows (x64)
zip -r dubswitch-win-x64.zip dist/dubswitch-win32-x64

# Raspberry Pi/Linux ARM (arm64)
zip -r dubswitch-linux-arm64.zip dist/dubswitch-linux-arm64

chmod +x createRelease.sh
./createRelease.sh

4. Building Linux .deb packages (optional)

- The release script now tries to build native Debian packages (.deb) for linux-x64 and linux-arm64 in addition to the ZIPs.
- Prerequisites:
	- On macOS: Install Docker Desktop and keep it running. The script will use Docker to cross-build Linux .deb packages.
		- If Docker Desktop is installed but not running, the script will try to start it automatically and will stop it again after .deb files are produced.
	- On Linux: Ensure dpkg (dpkg-deb) and fakeroot are installed. Example (Debian/Ubuntu):
		- sudo apt-get update
		- sudo apt-get install -y dpkg-dev fakeroot
	- electron-builder: The script will attempt to install electron-builder globally if not found. If you prefer local:
		- npm install --save-dev electron-builder
		- Then it will use npx electron-builder automatically.

Outputs:
- All artifacts are written to dist-release-<version>/
- Example files:
	- dubswitch-linux-x64-<version>.zip
	- dubswitch-linux-arm64-<version>.zip
	- dubswitch-x64-<version>.deb (on macOS with Docker or on Linux)
	- dubswitch-arm64-<version>.deb (on macOS with Docker or on Linux)